{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,cAAqB,EAIXC,mBAAS,IAJE,mBAIxCC,EAJwC,KAI5BC,EAJ4B,KAuB/C,OACI,sBAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAGEN,GAAe,SAAAO,GAAU,OAAKL,GAAL,mBAAoBK,OAC7CJ,EAAc,KAQlB,SACI,6BACI,uBACAK,KAAK,OACLC,MAASP,EACTQ,SAvBc,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,e,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,uCAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,kCAAMA,SCJLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCb,SAACA,GAAc,IAAD,EAGZZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAgCtC,OAtBAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAM,SAAAC,GAGCH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAIlB,CAACpB,IAUDqB,ED/BwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,qCACA,qBAAIJ,UAAU,kCAAd,cAAmDhB,EAAnD,OAECoB,GAAW,mBAAGJ,UAAU,yBAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEftBgB,EAAe,WAAM,MAGMvC,mBAAS,CAAC,cAHhB,mBAGvBM,EAHuB,KAGXP,EAHW,KAU9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAGA,6BAEQO,EAAWe,KAAK,SAACT,GAAD,OAIZ,aAFA,CAEC,EAAD,CAEAA,SAAaA,GADNA,Y,MCtB/B4B,IAASC,OAEL,cAAC,EAAD,IAGFC,SAASC,eAAe,W","file":"static/js/main.ca0f6397.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( {setCategories } ) => {\r\n\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        //if( inputValue.trim().lenght > 0) {\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n       // }\r\n\r\n        // console.log('Submited')\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <h2>\r\n                <input \r\n                type=\"text\" \r\n                value = {inputValue}\r\n                onChange = { handleInputChange }\r\n                >\r\n                </input>\r\n            </h2>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n    AddCategory.propTypes = {\r\n        setCategories : PropTypes.func.isRequired\r\n    }","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=XvlZUc3ao98442qxvFyus3yYv4yWMS8Y`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs =  data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    // console.log(img)\r\n\r\n    return (\r\n        <div className=\"card animate_animated animate_bounce\"> \r\n            <img src = {url} alt = {title}></img>\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate_animated animate_bounce\"> { category } </h3>\r\n\r\n        {loading && <p className=\"animate_animated flash\">Loading</p> }\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem\r\n                        key = {img.id} \r\n                        {...img}\r\n                        ></GifGridItem>\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n        .then( imgs => {\r\n\r\n\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n                   \r\n            })\r\n        }, [category])\r\n\r\n    // setTimeout(() => {\r\n    //     setstate({\r\n    //         data: [1,2,3],\r\n    //         loading: false,\r\n    //     })\r\n        \r\n    // }, 2000);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch','Samurai X','Dragon Ball',''];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = (element) => {\r\n    //     setCategories([...categories,'HunterXhunter'])\r\n    //     // setCategories(categories => [...categories,'HunterXhunter'])\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }></AddCategory>\r\n            <hr></hr>\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n\r\n                        // <li>   key= {category }    { category  }</li>\r\n\r\n                        <GifGrid \r\n                        key = {category }\r\n                        category = { category  } \r\n                        />\r\n                        // <GifGrid  \r\n                        //           category = { category  }\r\n                        // ></GifGrid>\r\n\r\n                        ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <GifExpertApp\n     />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}